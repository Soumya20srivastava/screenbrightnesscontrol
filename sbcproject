import cv2
import mediapipe as mp
import numpy as np
import screen_brightness_control as sbc
from math import hypot

cap = cv2.VideoCapture(0)
mpHands = mp.solutions.hands
hands = mpHands.Hands()
mpDraw = mp.solutions.drawing_utils
while True:
    a, img = cap.read()
    imgRGB = cv2.cvtColor (img, cv2.COLOR_BGR2RGB)
    results = hands.process(imgRGB)
    lmlist = []
    if results.multi_hand_landmarks:
        for handlandmark in results.multi_hand_landmarks:
            for id, lm in enumerate (handlandmark.landmark):
                h,w,_= img.shape
                cx, cy = int(lm.x*w), int(lm.y*h)
                lmlist.append([id, cx, cy])
                mpDraw.draw_landmarks(img, handlandmark, mpHands.HAND_CONNECTIONS)
                #print (lmlist)
                
                if lmlist:
                    if len(lmlist) >= 9:
                        x1, y1 = lmlist[4][1], lmlist[4][2]
                        x2, y2 = lmlist[8][1], lmlist[8][2]
                        cv2.circle(img, (x1, y1), 3, (255, 0, 0), cv2.FILLED)
                        cv2.circle(img, (x2, y2), 3, (255, 0, 0), cv2.FILLED)
                        cv2.line(img,(x1, y1), (x2, y2), (255, 0, 0),3)

        length = hypot(x2 - x1, y2 - y1)
        bright = np.interp(length, [15, 220], [0, 100])
        print(bright, length)
        sbc.set_brightness(int(bright))

    
    cv2.imshow ('image', img)
    if cv2.waitKey(1) &0xff == ord('q'):
        break

